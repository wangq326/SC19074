---
title: "A-19074-2019-10-18"
author: '19074'
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Question : Exercise 6.5

+ Suppose a $95\%$ symmetric t-interval is applied to estimate a mean, but the sample data are non-normal. Then the probability that the conﬁdence interval covers the mean is not necessarily equal to $0.95$. 
+ Use a Monte Carlo experiment to estimate the coverage probability of the t-interval for random samples of $\chi^2(2)$ data with sample size $n=20$. 
+ Compare your t-interval results with the simulation results in Example 6.4.(The t-interval should be more robust to departures from normality than the interval for variance.) 

## Answer

**Monte Carlo experiment to estimate a conﬁdence level** 

* Suppose that $X \sim F_X$ is the random variable of interest and that $\theta$ is the target parameter to be estimated. 
  + 1.For each replicate, indexed $i=1,...,m$ : 
     + (a)Generate the jth random sample, $X^{(i)}=(X^{(i)}_1 ,...,X^{(i)}_n)$. 
     + (b)Compute the conﬁdence interval $C_i$ for the jth sample. 
     + (c)Compute $y_i=I(\theta\in C_i)$ for thejth sample. 
  + 2.Compute the empirical conﬁdence level $\bar y=\frac1m\sum_{i=1}^my_i$.

* In this exercise:
   + $C_i=(\bar X^{(i)}+t_{\alpha/2}(n-1)sd(X^{(i)})/\sqrt n,\bar X^{(i)}+t_{1-\alpha/2}(n-1)sd(X^{(i)})/\sqrt n)$
   + $E(\chi^2(v))=v$
  
```{r}
ecp.chi2 <- function(n, m, v, alpha){
  # coverage probability of CI,sample size n,replicate m,confidence level 1-alpha
  ecp <- numeric(m)
  for(i in 1:m){
    x <- rchisq(n, df = v) # sample from chi(v)
    lcl <- mean(x) - qt(1-alpha/2, n-1) * sd(x) / sqrt(n) # lower conﬁdence limit
    ucl <- mean(x) + qt(1-alpha/2, n-1) * sd(x) / sqrt(n) # upper conﬁdence limit
    if(lcl <= v){
        if(v <= ucl){
          ecp[i] <- 1  
        }
    } # cp for a MC experiment replicate
  }
  cp <- mean(ecp)
  cp
}
ecp <- ecp.chi2(20, 1000, 2, 0.05)
ecp
```

**Simulation results in Example 4**

```{r}
n <- 20 
alpha <- .05 
UCL <- replicate(1000, expr = { 
  x <- rchisq(n, df = 2) 
  (n-1) * var(x) / qchisq(alpha, df = n-1) 
  })  
ecp.eg4 <- mean(UCL > 4) 
```

**Analysis**

* The empirical conﬁdence level is `r ecp` in this experiment. In this experiment the interval for variance, from Page 162, only `r ecp.eg4` of the intervals contained the population variance, which is far from the $0.95$ coverage under normality. 
* The t-interval is more robust to departures from normality than the interval for variance.


## Question 2 : Exercise 6.6

+ Estimate the $0.025$, $0.05$, $0.95$, and $0.975$ quantiles of the skewness $\sqrt {b_1}$ under normality by a Monte Carlo experiment. 
+ Compute the standard error of the estimates from (2.14) using the normal approximation for the density (with exact variance formula). 
+ Compare the estimated quantiles with the quantiles of the large sample approximation $\sqrt {b_1}\sim N(0,\frac 6n)$. 

## Answer

+ 1.For each replicate, indexed $i=1,...,m$ : 
     + (a)Generate the jth random sample, $X^{(i)}=(X^{(i)}_1 ,...,X^{(i)}_n)$. 
     + (b)Compute the skewness $\sqrt{b_1^{(j)}}=\frac{\frac1n\sum_{j=1}^m(X^{(i)}_j-\bar X_{.}^{(i)})^3}{(\frac1n\sum_{j=1}^m(X^{(i)}_j-\bar X_{.}^{(i)})^2)^{(\frac32)}}$. 
+ 2.Compute the quantile of $\sqrt{b_1}$. 
+ 3.Compute the standard error of the estimates $Var(\hat X_q)=\frac {q(1-q)}{nf(X_q)^2}$, where $f(X_q)$ is pdf of $N(0,\frac{6(n-2)}{(n+1)(n+3)})$

```{r}
sk <- function(x) {
  #computes the sample skewness coeff. 
  xbar <- mean(x) 
  m3 <- mean((x - xbar)^3) 
  m2 <- mean((x - xbar)^2) 
  return(m3 / m2^1.5) 
} 

MC_sk <- function(n, m){
  #a MC experiment of m replicate,with n sample from population
  #estimate skewness of each replicate
  MC_skewness <- numeric(m)
  for (i in 1:m){
    replicate_MC <- rnorm(n)
    MC_skewness[i] <- sk(replicate_MC)
  }
  MC_skewness
}

level <- c(0.025, 0.05, 0.95, 0.975)
n <- 20
m <- 1000
q_sk <- quantile(MC_sk(n, m), level)
cv <- qnorm(level, mean = 0, sd = sqrt(6/n))
knitr::kable(t(cbind(q_sk,cv)), format = 'html', caption = 'Quantile')

sd_hat <- sqrt(level*(1-level)/(n*dnorm(q_sk,mean=0,sd=sqrt(6*(n-2)/(n+1)/(n+3)))^2)) # Compute the standard error of the estimates
sd_hat
```

**Analysis**

+ We can find that the simulated estimation of quantile is approximate to the real quantile under normality.
+ The standard error of the estimates from (2.14) using the normal approximation for the density (with exact variance formula) is `r sd_hat` when q=`r level`.

